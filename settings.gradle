pluginManagement {
    repositories {

        maven { url 'https://maven.aliyun.com/repository/central' }
//        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
//        maven { url 'https://maven.aliyun.com/repository/apache-snapshots' }
        gradlePluginPortal()
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
    }
    plugins {
        id 'io.quarkus' version '3.11.3'
    }
}
dependencyResolutionManagement {
    versionCatalogs {
        libs {
            // versions
            version('quarkus', '3.11.3')
            version('jooqQuarkiverse', '2.0.1')
            version('slf4j-jboss-logmanager', '2.0.1.Final')
            version('testcontainers', '1.19.6')
            version('consul', '2.3.1')
            version('hanlp', 'portable-1.8.4')
            version('commons', '4.4')
            version('guava', '33.2.1-jre')

            // NOTE:quarkus
            plugin('quarkusPlugin', 'io.quarkus').versionRef('quarkus')
            library('quarkusPlaform', 'io.quarkus.platform', 'quarkus-bom').versionRef('quarkus')
            library('quarkusSmallryeOpenapi', 'io.quarkus', 'quarkus-smallrye-openapi').versionRef('quarkus')
            library('quarkusArc', 'io.quarkus', 'quarkus-arc').versionRef('quarkus')
//            library('quarkusResteasyReactiveJackson', 'io.quarkus', 'quarkus-resteasy-reactive-jackson').versionRef('quarkus')
            library('quarkusJackson', 'io.quarkus', 'quarkus-rest-jackson').versionRef('quarkus')
            library('quarkusJunit5', 'io.quarkus', 'quarkus-junit5').versionRef('quarkus')

            library('dbHealth', 'io.quarkus', 'quarkus-smallrye-health').versionRef('quarkus')

            library('flyway', 'io.quarkus', 'quarkus-flyway').versionRef('quarkus')
            //cached

            library('cache', 'io.quarkus', 'quarkus-cache').versionRef('quarkus')

            // NOTE:slf4j-jboss-logmanager (links quarkus jboss-logging so it can log jOOQs slf4j logging)
            library('slf4jJbossLogmanager', 'org.jboss.slf4j', 'slf4j-jboss-logmanager').versionRef('slf4j-jboss-logmanager')

            // NOTE:vert.x
            library('vertx', 'io.quarkus', 'quarkus-vertx').versionRef('quarkus')
            library('vertxClient', 'io.smallrye.reactive', 'smallrye-mutiny-vertx-web-client').versionRef('quarkus')

            // NOTE:db
            library('agroal', 'io.quarkus', 'quarkus-agroal').versionRef('quarkus')
            library('quarkusJdbcMariadb', 'io.quarkus', 'quarkus-jdbc-mariadb').versionRef('quarkus')
            library('quarkusJdbcMySQL', 'io.quarkus', 'quarkus-jdbc-mysql').versionRef('quarkus')
            library('quarkusJdbcPostgreSQL', 'io.quarkus', 'quarkus-jdbc-postgresql').versionRef('quarkus')

            library('quarkusReactivePgClient', 'io.quarkus', 'quarkus-reactive-pg-client').versionRef('quarkus')
            library('quarkusReactiveMysqlClient', 'io.quarkus', 'quarkus-reactive-mysql-client').versionRef('quarkus')

            library('mongodb', 'io.quarkus', 'quarkus-mongodb-client').versionRef('quarkus')
            library('redis', 'io.quarkus', 'quarkus-redis-client').versionRef('quarkus')
            library('commons', 'org.apache.commons', 'commons-collections4').versionRef('commons')

            //NOTE tool
            library('graphql', 'io.quarkus', 'quarkus-smallrye-graphql').versionRef('quarkus')
            library("rest-client-jackson", "io.quarkus", "quarkus-rest-client-jackson").versionRef('quarkus')
            library("rest-client", "io.quarkus", "quarkus-rest-client-jackson").versionRef('quarkus')
            library("guava", "com.google.guava", "guava").versionRef('guava')
            library("opentelemetry","io.quarkus","quarkus-opentelemetry").versionRef('quarkus')
            // NOTE:jooq
            library('jooq', 'io.quarkiverse.jooq', 'quarkus-jooq').versionRef('jooqQuarkiverse')

            // NOTE:consul
            library('consul', 'io.quarkiverse.config', 'quarkus-config-consul').versionRef('consul')
            library('consulStork', 'io.smallrye.stork', 'stork-service-discovery-consul').versionRef('quarkus')
            library('consulClient', 'io.smallrye.reactive', 'smallrye-mutiny-vertx-consul-client').versionRef('quarkus')
            library('pulsar', 'io.quarkus', 'quarkus-smallrye-reactive-messaging-pulsar').versionRef('quarkus')
            library('grpc', 'io.quarkus', 'quarkus-grpc').versionRef('quarkus')

            // NOTE:testcontainers
            library('testcontainers', 'org.testcontainers', 'testcontainers').versionRef('testcontainers')
            library('testcontainersPg', 'org.testcontainers', 'postgresql').versionRef('testcontainers')
            library('testcontainersJunitJupiter', 'org.testcontainers', 'junit-jupiter').versionRef('testcontainers')

            library('assured', 'io.rest-assured', 'rest-assured').versionRef('quarkus')

            // NOTE:jwt
            library('jwt', 'io.quarkus', 'quarkus-smallrye-jwt').versionRef('quarkus')
            library('jwtBuild', 'io.quarkus', 'quarkus-smallrye-jwt-build').versionRef('quarkus')
            //NOTE:NLP
            library('hanlp', 'com.hankcs', 'hanlp').versionRef('hanlp')
            // NOTE:SMTP
            library('smtp', 'io.quarkus', 'quarkus-mailer').versionRef('quarkus')

            // NOTE: valid
            library('valid', 'io.quarkus', 'quarkus-hibernate-validator').versionRef('quarkus')

            // NOTE:bundles
            bundle('quarkus', ['quarkusJackson', 'quarkusArc', 'quarkusJunit5'])

            bundle('vertx', ['vertx', 'vertxClient'])
            bundle('postgresql', ['quarkusJdbcPostgreSQL', 'quarkusReactivePgClient'])

            bundle('allJdbc', ['quarkusJdbcMariadb', 'quarkusJdbcMySQL', 'quarkusJdbcPostgreSQL'])
            bundle('allDBReactiveClient', ['quarkusReactivePgClient', 'quarkusReactiveMysqlClient'])
            bundle('auth', ['jwt', 'jwtBuild'])

            bundle('testcontainers', ['testcontainers', 'testcontainersPg'])

            bundle('test', ['testcontainers', 'testcontainersPg', 'flyway', 'assured', 'quarkusJunit5'])
            // test-bundles
            bundle('test.quarkus', ['quarkusJunit5', 'quarkusJdbcPostgreSQL', 'quarkusJackson', 'quarkusSmallryeOpenapi', 'quarkusArc',])
            bundle('test.testcontainers', ['testcontainers', 'testcontainersPg', 'testcontainersJunitJupiter'])
        }
    }
}
rootProject.name = 'note'
include 'application', 'nlp', 'smtp','vector','comment'

