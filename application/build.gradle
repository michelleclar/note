plugins {
    id 'java'
    id 'idea'
    id 'io.quarkus'
    id("org.jooq.jooq-codegen-gradle") version "3.19.10"
}
dependencies {
    implementation project(':jooq')
    implementation project(':smtp')
    implementation enforcedPlatform(libs.quarkusPlaform)
    implementation libs.jooq
    implementation libs.bundles.quarkus
    implementation libs.bundles.auth
    implementation libs.quarkusSmallryeOpenapi
    implementation libs.slf4jJbossLogmanager
    implementation libs.dbHealth
    implementation libs.cache
    implementation libs.rest.client.jackson
    implementation libs.rest.client
    implementation libs.smtp
    implementation libs.valid
    implementation libs.grpc
    implementation libs.opentelemetry
    implementation 'io.quarkiverse.langchain4j:quarkus-langchain4j-ollama:0.17.0'
    jooqCodegen 'org.postgresql:postgresql:42.7.3'
}

def mySrcDir = 'src/main/java'
def generatedDir = 'src/main/generated'
sourceSets {
    main {
        java {
            srcDir generatedDir
            srcDir mySrcDir
        }
    }
}
idea {
    module {
        generatedSourceDirs.addAll(file(generatedDir))
        sourceDirs.addAll(file(generatedDir))
        sourceDirs.addAll(file(mySrcDir))
    }
}

quarkus {
    quarkusBuildProperties.put("quarkus.grpc.codegen.proto-directory", "../protos")
}

test {
    systemProperty 'java.util.logging.manager', 'org.jboss.logmanager.LogManager'
}

jooq {
    configuration {
        jdbc {
            url = "jdbc:postgresql://localhost:5432/db"
            driver = "org.postgresql.Driver"
            user = "root"
            password = "root"
        }
        generator {

//            name = "org.jooq.meta.mysql.MySQLDatabase"

            // Optional: The jooq-meta configuration, configuring the information schema source.
            database {
                inputSchema = 'public'
            }

            // Optional: The jooq-codegen configuration, configuring the generated output content.
            generate {
                pojos = true
                daos = true
            }

            // Optional: The generation output target
            target {
                packageName = "org.carl.generated"
                directory = "src/main/generated"
            }
        }
    }
}